// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Canal {
  whatsapp
  messenger
  telegram
}

enum ConversationStatus {
  pending
  open
  close
}

enum UserRole {
  admin
  agent
  user
}

model User {
  id                String         @id @default(uuid())
  username          String // phone or email or user fullname
  password          String?
  role              UserRole
  createdAt         DateTime       @default(now())
  updatedAt         DateTime       @updatedAt
  agentConversation Conversation[] @relation("agent")
  userConversations Conversation[] @relation("user")
  messages           Message[]

  @@unique([username, role])
}

model Conversation {
  id        String             @id @default(uuid())
  title     String
  userId    String
  agentId   String?
  canal Canal
  status    ConversationStatus @default(pending)
  createdAt DateTime           @default(now())
  closedAt  DateTime?

  user    User      @relation(name: "user", fields: [userId], references: [id])
  agent   User?      @relation(name: "agent", fields: [agentId], references: [id])
  messages Message[]
}

model Message {
  id             String   @id @default(uuid())
  text           String
  conversationId String
  userId         String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  conversation Conversation @relation(fields: [conversationId], references: [id])
  user         User         @relation(fields: [userId], references: [id])
}
